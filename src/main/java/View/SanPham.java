/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Controller.SanPhamController;
import Model.SanPhamModel;
import java.awt.Component;
import java.awt.Image;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author huyng
 */

public class SanPham extends javax.swing.JPanel {

    /**
     * Creates new form SanPham
     */
    public SanPham() {
        initComponents();
        hienThiSanPham();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTSanPham = new javax.swing.JTable();
        jBSua = new javax.swing.JButton();
        jBThem = new javax.swing.JButton();
        jBXoa = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        jTSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Giá", "Số lượng", "Mã danh mục"
            }
        ));
        jScrollPane1.setViewportView(jTSanPham);

        jBSua.setText("Sửa");
        jBSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSuaActionPerformed(evt);
            }
        });

        jBThem.setText("Thêm");
        jBThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBThemActionPerformed(evt);
            }
        });

        jBXoa.setText("Xóa");
        jBXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBXoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBThem)
                        .addGap(18, 18, 18)
                        .addComponent(jBSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBXoa))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBThem)
                    .addComponent(jBSua)
                    .addComponent(jBXoa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private ThemSuaChiTietSanPham tsctsp;
    private void jBThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBThemActionPerformed
        // TODO add your handling code here:
        tsctsp = new ThemSuaChiTietSanPham(this);
        tsctsp.setVisible(true);
        
    }//GEN-LAST:event_jBThemActionPerformed

    private void jBSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSuaActionPerformed
        // TODO add your handling code here:
        int selectedRow = this.jTSanPham.getSelectedRow();

        // Kiểm tra nếu có hàng được chọn
        if (selectedRow != -1) {
            // Lấy dữ liệu ảnh từ hàng đã chọn
            byte[] imageBytes = (byte[]) jTSanPham.getValueAt(selectedRow, 5); // Thay columnIndexForImage bằng chỉ số cột chứa dữ liệu ảnh
            String maSanPham =  jTSanPham.getValueAt(selectedRow, 0).toString(); 
            String tenSanPham =  jTSanPham.getValueAt(selectedRow, 1).toString(); 
            double gia = Double.parseDouble(jTSanPham.getValueAt(selectedRow, 2).toString()); 
            int soLuong = Integer.parseInt(jTSanPham.getValueAt(selectedRow, 3).toString()); 
            String tenDanhMuc =  jTSanPham.getValueAt(selectedRow, 3).toString(); 
            SanPhamModel sp = new SanPhamModel(maSanPham, tenSanPham, gia, soLuong, tenDanhMuc, imageBytes);
            // Kiểm tra nếu dữ liệu ảnh không null
                            tsctsp = new ThemSuaChiTietSanPham(sp, this);
tsctsp.setVisible(true);
            
        }
        else{
        JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm cần sửa!");
        }
    }//GEN-LAST:event_jBSuaActionPerformed
private SanPhamController spctl;
    private void jBXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBXoaActionPerformed
        // TODO add your handling code here:
int selectedRow = this.jTSanPham.getSelectedRow();

// Kiểm tra nếu có hàng được chọn
if (selectedRow != -1) {
    // Lấy dữ liệu ảnh từ hàng đã chọn
    String maSanPham = jTSanPham.getValueAt(selectedRow, 0).toString();

    // Hiển thị JOptionPane xác nhận xóa
    int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa sản phẩm này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
    
    // Kiểm tra lựa chọn của người dùng
    if (confirm == JOptionPane.YES_OPTION) {
        spctl = new SanPhamController();
        spctl.xoaSanPham(maSanPham);
        JOptionPane.showMessageDialog(this, "Xóa thành công!");
        this.hienThiSanPham();
    }
} else {
    JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm cần xóa!");
}

    }//GEN-LAST:event_jBXoaActionPerformed

    public void hienThiSanPham(){
    // Tạo mô hình dữ liệu cho jTSanPham
        DefaultTableModel tableModel = (DefaultTableModel) this.jTSanPham.getModel();
        tableModel.setRowCount(0);
        tableModel.setColumnCount(0);
        tableModel.addColumn("Mã sản phẩm");
        tableModel.addColumn("Tên sản phẩm");
        tableModel.addColumn("Giá");
        tableModel.addColumn("Số lượng");
        tableModel.addColumn("Tên danh mục");
        tableModel.addColumn("Ảnh");
        
        spctl = new SanPhamController();
        // Gọi phương thức getListSanPham() để lấy danh sách sản phẩm
        List<SanPhamModel> sanPhamList = spctl.getListSanPham();

        // Duyệt qua danh sách sản phẩm và thêm từng sản phẩm vào mô hình dữ liệu
        for (SanPhamModel sanPham : sanPhamList) {
            Object[] rowData = {
                sanPham.getMaSanPham(),
                sanPham.getTenSanPham(),
                sanPham.getGia(),
                sanPham.getSoLuong(),
                sanPham.getTenDanhMuc(),
                sanPham.getAnh()
            };
            tableModel.addRow(rowData);
            
}
// Đặt mô hình dữ liệu cho jTSanPham
jTSanPham.setModel(tableModel);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBSua;
    private javax.swing.JButton jBThem;
    private javax.swing.JButton jBXoa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTSanPham;
    // End of variables declaration//GEN-END:variables
}
