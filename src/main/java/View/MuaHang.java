/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Controller.ChiTietHoaDonController;
import Controller.HoaDonController;
import Controller.SanPhamController;
import Model.ChiTietHoaDonModel;
import Model.HoaDonModel;
import Model.SanPhamModel;
import java.awt.Component;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author huyng
 */

public class MuaHang extends javax.swing.JPanel {

    /**
     * Creates new form SanPham
     */
    private String makh;
    public MuaHang(String makh) {
        initComponents();
        hienThiSanPham();
        this.makh = makh;
        this.jBMuaHang.setVisible(false);
                this.jLTongTien.setVisible(false);
                this.jBThanhToan.setVisible(false);

    }
private HoaDonController hdctl;
private String maHoaDon;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTSanPham = new javax.swing.JTable();
        jBMua = new javax.swing.JButton();
        jBXemGioHang = new javax.swing.JButton();
        jBMuaHang = new javax.swing.JButton();
        jBThanhToan = new javax.swing.JButton();
        jLTongTien = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));

        jTSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Giá", "Số lượng", "Mã danh mục"
            }
        ));
        jScrollPane1.setViewportView(jTSanPham);

        jBMua.setText("Thêm vào giỏ hàng");
        jBMua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMuaActionPerformed(evt);
            }
        });

        jBXemGioHang.setText("Xem giỏ hàng");
        jBXemGioHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBXemGioHangActionPerformed(evt);
            }
        });

        jBMuaHang.setText("Mua hàng");
        jBMuaHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMuaHangActionPerformed(evt);
            }
        });

        jBThanhToan.setText("Thanh toán");
        jBThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBThanhToanActionPerformed(evt);
            }
        });

        jLTongTien.setBackground(new java.awt.Color(204, 204, 255));
        jLTongTien.setText("Tổng tiền: 0.0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jBThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBMua, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(278, 278, 278)
                        .addComponent(jBMuaHang, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBXemGioHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBMua)
                    .addComponent(jBXemGioHang)
                    .addComponent(jBMuaHang))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBThanhToan)
                    .addComponent(jLTongTien))
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private ThemSuaChiTietSanPham tsctsp;
    List<ChiTietHoaDonModel> chiTietHoaDonList = new ArrayList<>();
    private void jBMuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMuaActionPerformed
        // TODO add your handling code here:
        // Lấy chỉ mục hàng được chọn trong bảng sản phẩm
    int selectedRow = jTSanPham.getSelectedRow();
    
    if (selectedRow != -1) {
        // Lấy số lượng sản phẩm cần mua từ người dùng
        String quantityString = JOptionPane.showInputDialog(this, "Nhập số lượng cần mua:", "Mua hàng", JOptionPane.PLAIN_MESSAGE);

        if (quantityString != null && !quantityString.isEmpty()) {
            try {
                int quantity = Integer.parseInt(quantityString);
                 hdctl = new HoaDonController();
        maHoaDon = hdctl.getMaHoaDon();
                    
                ChiTietHoaDonModel chiTietHoaDon = new ChiTietHoaDonModel(quantity, maHoaDon,  this.jTSanPham.getValueAt(selectedRow, 0).toString());

                // Thêm ChiTietHoaDonModel vào danh sách chiTietHoaDonList
                chiTietHoaDonList.add(chiTietHoaDon);
                System.out.println(chiTietHoaDon.toString());
                
                // Hiển thị thông báo thành công
                JOptionPane.showMessageDialog(this, "Mua hàng thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            } catch (NumberFormatException e) {
                // Xử lý khi số lượng không hợp lệ (không phải số nguyên)
                JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        // Hiển thị thông báo khi chưa chọn sản phẩm
        JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm cần mua!", "Thông báo", JOptionPane.WARNING_MESSAGE);
    }
        
    }//GEN-LAST:event_jBMuaActionPerformed
public void taiGioHang(){
DefaultTableModel tableModel = (DefaultTableModel) this.jTSanPham.getModel();
        tableModel.setRowCount(0);
        int i = 1;
        tableModel.setColumnCount(0);
        tableModel.addColumn("Số thự tự");
        tableModel.addColumn("Mã hóa đơn");
        tableModel.addColumn("Mã sản phẩm");
        tableModel.addColumn("Số lượng");


        // Duyệt qua danh sách sản phẩm và thêm từng sản phẩm vào mô hình dữ liệu
        for (ChiTietHoaDonModel cthd : chiTietHoaDonList) {
            Object[] rowData = {
                i,
                cthd.getMaHoaDon(),
                cthd.getMaSanPham(),
                cthd.getSoLuong(),
            };
            i++;
            tableModel.addRow(rowData);
}
}
private double tongtien = 0.0;
public void tinhTongTien(){
    spctl = new SanPhamController();
    tongtien = 0.0 ;
for (ChiTietHoaDonModel cthd : chiTietHoaDonList) {
          tongtien += spctl.getDonGiaByMaSanPham(cthd.getMaSanPham()) * cthd.getSoLuong();
            }
this.jLTongTien.setText("Tổng tiền: " + tongtien);
}
    private void jBXemGioHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBXemGioHangActionPerformed
        // TODO add your handling code here:
        this.jLTongTien.setVisible(true);
        tinhTongTien();
        taiGioHang();
        this.jBMuaHang.setVisible(true);
        this.jBMua.setVisible(false);
        this.jBXemGioHang.setVisible(false);
        this.jBThanhToan.setVisible(true);
    }//GEN-LAST:event_jBXemGioHangActionPerformed

    private void jBMuaHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMuaHangActionPerformed
        // TODO add your handling code here:
        this.jBMuaHang.setVisible(false);
        this.jBXemGioHang.setVisible(true);
        this.jBMua.setVisible(true);
        this.jBThanhToan.setVisible(false);
        hienThiSanPham();
                this.jLTongTien.setVisible(false);
                this.jBThanhToan.setVisible(false);
                 this.jBThanhToan.setVisible(true);

    }//GEN-LAST:event_jBMuaHangActionPerformed
ChiTietHoaDonController cthdctl;
    private void jBThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBThanhToanActionPerformed
        // TODO add your handling code here:
        if(chiTietHoaDonList.isEmpty())
        {
        JOptionPane.showMessageDialog(this, "Giỏ hàng trống!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        return;
        }
        DefaultTableModel tableModel = (DefaultTableModel) this.jTSanPham.getModel();
        tableModel.setRowCount(0);
        cthdctl = new ChiTietHoaDonController();
                hdctl = new HoaDonController();
        maHoaDon = hdctl.getMaHoaDon();
        HoaDonModel hd = new HoaDonModel(this.maHoaDon, new Date(), makh);
        hdctl.themHoaDon(hd);
        for (ChiTietHoaDonModel cthd : chiTietHoaDonList) {
          cthdctl.themChiTietHoaDon(cthd);
          
            }
        JOptionPane.showMessageDialog(this, "Thanh toán thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        tongtien = 0.0;
        this.jLTongTien.setText("Tổng tiền: 0.0");
        
    }//GEN-LAST:event_jBThanhToanActionPerformed
private SanPhamController spctl;

    public void hienThiSanPham(){
    // Tạo mô hình dữ liệu cho jTSanPham
        DefaultTableModel tableModel = (DefaultTableModel) this.jTSanPham.getModel();
        tableModel.setRowCount(0);
        tableModel.setColumnCount(0);
        tableModel.addColumn("Mã sản phẩm");
        tableModel.addColumn("Tên sản phẩm");
        tableModel.addColumn("Giá");
        tableModel.addColumn("Số lượng");
        tableModel.addColumn("Tên danh mục");
        tableModel.addColumn("Ảnh");
        
        spctl = new SanPhamController();
        // Gọi phương thức getListSanPham() để lấy danh sách sản phẩm
        List<SanPhamModel> sanPhamList = spctl.getListSanPham();

        // Duyệt qua danh sách sản phẩm và thêm từng sản phẩm vào mô hình dữ liệu
        for (SanPhamModel sanPham : sanPhamList) {
            Object[] rowData = {
                sanPham.getMaSanPham(),
                sanPham.getTenSanPham(),
                sanPham.getGia(),
                sanPham.getSoLuong(),
                sanPham.getTenDanhMuc(),
                sanPham.getAnh()
            };
            tableModel.addRow(rowData);
            
}
// Đặt mô hình dữ liệu cho jTSanPham
jTSanPham.setModel(tableModel);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBMua;
    private javax.swing.JButton jBMuaHang;
    private javax.swing.JButton jBThanhToan;
    private javax.swing.JButton jBXemGioHang;
    private javax.swing.JLabel jLTongTien;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTSanPham;
    // End of variables declaration//GEN-END:variables
}
